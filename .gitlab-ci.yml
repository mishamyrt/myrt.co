image: node:lts-alpine

variables:
  DOCKER_DRIVER: overlay
  IMAGE_VERSION: $CI_PIPELINE_ID
  HOST: "147.78.66.178"

stages:
  - build site
  - quality assurance
  - build image
  - deploy

build site:
  stage: build site
  variables:
    PARCEL_WORKERS: 1
  script:
    - npm install
    - npm run build
  only:
    - master
  artifacts:
    paths:
    - dist

Spell check:
  stage: quality assurance
  before_script:
    - npm install
  script:
    - npm run spell-check

build docker image:
  image: docker:latest
  stage: build image
  services: ['docker:dind']
  script:
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE -f docker/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE

deploy:
  image: pwinik/ansible
  stage: deploy
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 700 ~/.ssh
    - chmod 644 ~/.ssh/known_hosts
  script:
     - >
      ansible-playbook
      -i $HOST,
      docker/deploy.yaml
      -u root
      -e REGISTRY_LOGIN="\"gitlab-ci-token\""
      -e REGISTRY_PASSWORD="\"$CI_JOB_TOKEN\""
      -e REGISTRY_URL="\"$CI_REGISTRY\""
      -e IMAGE_NAME="\"$CI_REGISTRY_IMAGE\""
      -e IMAGE_VERSION="\"$IMAGE_VERSION\""
